MORSE_CODE = { 'A':'.-', 'B':'-...',
                    'C':'-.-.', 'D':'-..', 'E':'.',
                    'F':'..-.', 'G':'--.', 'H':'....',
                    'I':'..', 'J':'.---', 'K':'-.-',
                    'L':'.-..', 'M':'--', 'N':'-.',
                    'O':'---', 'P':'.--.', 'Q':'--.-',
                    'R':'.-.', 'S':'...', 'T':'-',
                    'U':'..-', 'V':'...-', 'W':'.--',
                    'X':'-..-', 'Y':'-.--', 'Z':'--..',
                    '1':'.----', '2':'..---', '3':'...--',
                    '4':'....-', '5':'.....', '6':'-....',
                    '7':'--...', '8':'---..', '9':'----.',
                    '0':'-----', ', ':'--..--', '.':'.-.-.-',
                    '?':'..--..', '/':'-..-.', '-':'-....-',
                    '(':'-.--.', ')':'-.--.-'}

def decrypt_message(morse):
    morse += ' '
    decipher = ''
    citext = ''
    for letter in morse:
        if letter == '/':
            continue
        if letter != ' ':
            i = 0
            citext += letter
        else:
            i += 1
            if i == 2 :
                decipher += ' '
            else:
                decipher += list(MORSE_CODE.keys())[list(MORSE_CODE.values()).index(citext)]
                citext = ''
    return decipher

def binary_to_text(binaryed):
    temp = ""
    text = ""
    for b in binaryed:
        if b == ' ':
            text += chr(int(temp, 2))
            temp = ""
        else :
            temp += b
    if len(temp) == 8:
        text += chr(int(temp, 2))
    return text

binary = decrypt_message
print(binary_to_text(binary))