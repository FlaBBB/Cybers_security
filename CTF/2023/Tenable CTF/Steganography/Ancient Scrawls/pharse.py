from PIL import Image, ImageDraw, ImageSequence

gif_path = 'ancient_scrawls.gif'
gif = Image.open(gif_path)

frames = [frame.copy() for frame in ImageSequence.Iterator(gif)]

cursor_position_arr = [(6, 112), (19, 117), (45, 113), (60, 107), (71, 101), (103, 80), (109, 37), (101, 18), (88, 6), (70, 50), (62, 112), (60, 153), (97, 157), (111, 119), (104, 99), (84, 89), (84, 90), (113, 112), (143, 108), (190, 71), (193, 50), (188, 41), (179, 45), (166, 93), (164, 113), (182, 118), (226, 101), (253, 70), (258, 67), (244, 76), (219, 98), (228, 112), (265, 98), (268, 76), (268, 66), (254, 106), (263, 112), (300, 88), (338, 68), (340, 69), (329, 72), (311, 88), (317, 115), (337, 108), (341, 82), (342, 73), (342, 83), (338, 132), (337, 147), (312, 159), (311, 159), (315, 145), (349, 108), (367, 98), (368, 98), (363, 97), (342, 71), (349, 35), (348, 15), (330, 15), (313, 25), (322, 48), (326, 69), (317, 77), (310, 79), (312, 80), (320, 84), (320, 91), (307, 104), (300, 133), (335, 147), (343, 143), (308, 157), (105, 93), (104, 64), (101, 63), (69, 38), (66, 31), (66, 30), (48, 79), (45, 136), (106, 129), (144, 56), (131, 24), (123, 86), (126, 111), (126, 117), (133, 106), (152, 78), (168, 97), (170, 112), (211, 112), (233, 100), (226, 70), (213, 73), (210, 108), (223, 115), (268, 101), (277, 95), (277, 79), (277, 76), (273, 102), (284, 132), (305, 119), (321, 83), (325, 76), (320, 146), (299, 153), (327, 95), (347, 91), (231, 130), (110, 114), (15, 84), (4, 72), (39, 64), (139, 55), (129, 56), (172, 120), (235, 105), (230, 101), (229, 98), (208, 85), (179, 121), (205, 135), (229, 89), (237, 41), (236, 44), (221, 122), (249, 135), (263, 128), (270, 99), (272, 90), (268, 116), (273, 132), (303, 114), (305, 87), (296, 74), (276, 82), (276, 99), (293, 98), (316, 87), (358, 69), (359, 72), (358, 89), (359, 88), (371, 72), (377, 74), (388, 81), (389, 82), (389, 92), (386, 121), (401, 139), (448, 109), (465, 48), (470, 31), (466, 56), (463, 131), (512, 120), (526, 109), (526, 108), (504, 74), (504, 73), (501, 71), (346, 58), (351, 60), (316, 131), (116, 55), (125, 34), (115, 29), (115, 31), (80, 84), (74, 119), (131, 128), (167, 109), (175, 86), (161, 83), (151, 107), (158, 121), (163, 122), (184, 128), (220, 116), (250, 93), (265, 85), (267, 81), (267, 82), (228, 101), (218, 115), (258, 134), (285, 94), (280, 85), (277, 97), (275, 129), (313, 124), (318, 96), (335, 85), (349, 78), (347, 81), (323, 89), (323, 121), (326, 128), (357, 143), (408, 120), (424, 52), (405, 15), (395, 77), (395, 136), (397, 138), (407, 76), (445, 76), (450, 108), (448, 145), (502, 130), (500, 125), (54, 119), (21, 96), (29, 61), (30, 60), (227, 63), (171, 89), (161, 94), (158, 97), (156, 96), (133, 79), (114, 81), (101, 105), (115, 121), (153, 124), (173, 114), (195, 92), (192, 73), (185, 98), (186, 124), (222, 121), (237, 110), (240, 93), (242, 85), (242, 80), (237, 105), (242, 118), (260, 125), (278, 113), (290, 89), (290, 83), (292, 76), (292, 72), (291, 81), (293, 90), (313, 91), (316, 86), (316, 87), (311, 101), (305, 124), (324, 128), (349, 113), (367, 84), (369, 68), (370, 67), (382, 78), (394, 102), (361, 118), (357, 129), (358, 127), (408, 122), (423, 103), (428, 79), (428, 76), (425, 112), (424, 135), (442, 132), (459, 116), (470, 92), (472, 77), (473, 76), (470, 105), (474, 121), (493, 129), (520, 125), (540, 77), (539, 74), (538, 83), (546, 90), (568, 82), (582, 72), (583, 52), (561, 66), (543, 135), (628, 125), (645, 115), (622, 118), (374, 104), (325, 63), (358, 51), (346, 48), (350, 51), (354, 47), (354, 48), (346, 45), (206, 29), (117, 26), (109, 55), (107, 90), (106, 90), (88, 53), (72, 69), (65, 124), (107, 123), (114, 95), (112, 85), (115, 116), (120, 131), (154, 105), (153, 77), (158, 75), (164, 96), (161, 101), (178, 77), (191, 83), (190, 96), (188, 102), (186, 106), (194, 118), (238, 117), (250, 81), (251, 76), (248, 94), (243, 143), (228, 153), (217, 144), (245, 111), (275, 103), (288, 83), (291, 74), (294, 66), (307, 77), (308, 86), (307, 85), (310, 68), (319, 69), (323, 73), (324, 79), (324, 81), (324, 82), (324, 81), (331, 73), (343, 64), (351, 71), (353, 76), (353, 77), (353, 81), (353, 83), (353, 85), (353, 86), (345, 108), (347, 119), (367, 130), (402, 117), (415, 95), (415, 73), (415, 76), (402, 113), (429, 106), (472, 93), (462, 70), (440, 64), (423, 69), (422, 72), (422, 74), (456, 90), (487, 92), (495, 81), (502, 72), (503, 68), (507, 86), (525, 89), (526, 80), (507, 106), (525, 131), (577, 126), (601, 95), (602, 74), (577, 77), (579, 117), (613, 129), (642, 117), (639, 119), (633, 135), (428, 119), (320, 79), (321, 10), (367, 18), (367, 39), (361, 46), (347, 53), (343, 60), (343, 65), (360, 71), (364, 72), (353, 76), (345, 83), (346, 88), (357, 104), (356, 116), (341, 131), (323, 129), (320, 129), (321, 129), (320, 131), (320, 134)]

# for frame in frames:
#     grayscale_frame = frame.convert('L')

#     width, height = grayscale_frame.size
#     for y in range(height):
#         for x in range(width):
#             pixel_value = grayscale_frame.getpixel((x, y))
#             if pixel_value == 0:
#                 cursor_position_arr.append((x, y))
#                 break
#         if pixel_value == 0:
#             break


X_THRESHOLD = 100
LENGTH_THRESHOLD = 120
LINE_THRESHOLD = 3

IS_ALL_DRAW = True

output_image = Image.new('RGB', gif.size, (255, 255, 255))
draw = ImageDraw.Draw(output_image)
draw_i = 0
j = 1
for i in range(1, len(cursor_position_arr)):
    if cursor_position_arr[i - 1][0] > cursor_position_arr[i][0] and (cursor_position_arr[i - 1][0] - cursor_position_arr[i][0]) + (cursor_position_arr[i - 1][0] - cursor_position_arr[i][0]) > LENGTH_THRESHOLD:
        if IS_ALL_DRAW and draw_i == 0:
            draw.point(cursor_position_arr[i - 1], fill=(0, 0, 0))
        if draw_i > LINE_THRESHOLD or IS_ALL_DRAW:
            output_image.save('segment_{}.png'.format(j))
            j += 1
        output_image = Image.new('RGB', gif.size, (255, 255, 255))
        draw = ImageDraw.Draw(output_image)
        draw_i = 0
        continue
    draw.line([cursor_position_arr[i - 1], cursor_position_arr[i]], fill=(0, 0, 0), width=2)
    draw_i += 1

output_image.save('segment_{}.png'.format(j))
