from binascii import hexlify, unhexlify
from os import popen, urandom

from Crypto.Util.number import bytes_to_long, long_to_bytes
from pwn import xor


def h(x, n):
    return (x >> (n * 8)) & 0xFF


def g(x, y, z):
    res = (3 * x + 5 * y + 7 * z) % 0x100
    return ((res << 4) | (res >> 4)) & 0xFF


def f(x):
    out_0 = g(h(x, 0), h(x, 1), 0)
    out_1 = g(h(x, 2), h(x, 1) ^ out_0, 1)
    out_2 = g(h(x, 2) ^ out_1, h(x, 3), 0)
    out_3 = g(h(x, 3), h(x, 3), 1)

    return (out_3 << 24) | (out_2 << 16) | (out_1 << 8) | (out_0)


def cipher(pt, keys):
    left, right = pt >> 32 & 0xFFFFFFFF, pt & 0xFFFFFFFF

    left, right = left, right ^ left
    num_round = 4
    # print(hex(left), hex(right))
    for i in range(num_round):
        left, right = left ^ f(right ^ keys[i]), right
        # print(hex(left), hex(right))
        if i == num_round - 1:
            break
        left, right = right, left
    left, right = left, right ^ left

    assert left < 2**32
    assert right < 2**32
    return (left << 32) | (right)


def pad(msg):
    return msg + chr(8 - len(msg) % 8).encode() * (8 - len(msg) % 8)


def encrypt(msg, keys):
    encrypted = b""
    enc_keys = [keys[0], keys[1], keys[2], keys[3]]
    # msg = pad(msg)
    for i in range(len(msg) // 8):
        encrypted += long_to_bytes(
            cipher(bytes_to_long(msg[8 * i : 8 * (i + 1)]), enc_keys)
        )
    return encrypted


def decrypt(msg, keys):
    decrypted = b""
    dec_keys = [keys[3], keys[2], keys[1], keys[0]]
    for i in range(len(msg) // 8):
        res = cipher(bytes_to_long(msg[8 * i : 8 * (i + 1)]), dec_keys)
        # print(res)
        decrypted += long_to_bytes(res)
    return decrypted


def hex_array(array: list):
    return [hex(x) for x in array]


org_keys = ["0x181df5f6", "0x207a3b45", "0x170c7f29", "0x23adbef6"]
keys = [
    ["0x98957576", "0x207a3b45", "0x17047f29", "0x232d3e76"],
    ["0x1815f5f6", "0x207a3b45", "0x17047f29", "0x232d3e76"],
    ["0x989d7576", "0xa07a3b45", "0x17047f29", "0x232d3e76"],
    ["0x181df5f6", "0xa07a3b45", "0x17047f29", "0x232d3e76"],
    ["0x989d7576", "0x20fabbc5", "0x17047f29", "0x232d3e76"],
    ["0x181df5f6", "0x20fabbc5", "0x17047f29", "0x232d3e76"],
    ["0x98957576", "0xa0fabbc5", "0x17047f29", "0x232d3e76"],
    ["0x1815f5f6", "0xa0fabbc5", "0x17047f29", "0x232d3e76"],
    ["0x18957576", "0x20723b45", "0x97047f29", "0x232d3e76"],
    ["0x9815f5f6", "0x20723b45", "0x97047f29", "0x232d3e76"],
    ["0x189d7576", "0xa0723b45", "0x97047f29", "0x232d3e76"],
    ["0x981df5f6", "0xa0723b45", "0x97047f29", "0x232d3e76"],
    ["0x189d7576", "0x20f2bbc5", "0x97047f29", "0x232d3e76"],
    ["0x981df5f6", "0x20f2bbc5", "0x97047f29", "0x232d3e76"],
    ["0x18957576", "0xa0f2bbc5", "0x97047f29", "0x232d3e76"],
    ["0x9815f5f6", "0xa0f2bbc5", "0x97047f29", "0x232d3e76"],
    ["0x18957576", "0x20723b45", "0x1784ffa9", "0x232d3e76"],
    ["0x9815f5f6", "0x20723b45", "0x1784ffa9", "0x232d3e76"],
    ["0x189d7576", "0xa0723b45", "0x1784ffa9", "0x232d3e76"],
    ["0x981df5f6", "0xa0723b45", "0x1784ffa9", "0x232d3e76"],
    ["0x189d7576", "0x20f2bbc5", "0x1784ffa9", "0x232d3e76"],
    ["0x981df5f6", "0x20f2bbc5", "0x1784ffa9", "0x232d3e76"],
    ["0x18957576", "0xa0f2bbc5", "0x1784ffa9", "0x232d3e76"],
    ["0x9815f5f6", "0xa0f2bbc5", "0x1784ffa9", "0x232d3e76"],
    ["0x98957576", "0x207a3b45", "0x9784ffa9", "0x232d3e76"],
    ["0x1815f5f6", "0x207a3b45", "0x9784ffa9", "0x232d3e76"],
    ["0x989d7576", "0xa07a3b45", "0x9784ffa9", "0x232d3e76"],
    ["0x181df5f6", "0xa07a3b45", "0x9784ffa9", "0x232d3e76"],
    ["0x989d7576", "0x20fabbc5", "0x9784ffa9", "0x232d3e76"],
    ["0x181df5f6", "0x20fabbc5", "0x9784ffa9", "0x232d3e76"],
    ["0x98957576", "0xa0fabbc5", "0x9784ffa9", "0x232d3e76"],
    ["0x1815f5f6", "0xa0fabbc5", "0x9784ffa9", "0x232d3e76"],
    ["0x989d7576", "0x207a3b45", "0x170c7f29", "0xa32d3e76"],
    ["0x181df5f6", "0x207a3b45", "0x170c7f29", "0xa32d3e76"],
    ["0x98957576", "0xa07a3b45", "0x170c7f29", "0xa32d3e76"],
    ["0x1815f5f6", "0xa07a3b45", "0x170c7f29", "0xa32d3e76"],
    ["0x98957576", "0x20fabbc5", "0x170c7f29", "0xa32d3e76"],
    ["0x1815f5f6", "0x20fabbc5", "0x170c7f29", "0xa32d3e76"],
    ["0x989d7576", "0xa0fabbc5", "0x170c7f29", "0xa32d3e76"],
    ["0x181df5f6", "0xa0fabbc5", "0x170c7f29", "0xa32d3e76"],
    ["0x189d7576", "0x20723b45", "0x970c7f29", "0xa32d3e76"],
    ["0x981df5f6", "0x20723b45", "0x970c7f29", "0xa32d3e76"],
    ["0x18957576", "0xa0723b45", "0x970c7f29", "0xa32d3e76"],
    ["0x9815f5f6", "0xa0723b45", "0x970c7f29", "0xa32d3e76"],
    ["0x18957576", "0x20f2bbc5", "0x970c7f29", "0xa32d3e76"],
    ["0x9815f5f6", "0x20f2bbc5", "0x970c7f29", "0xa32d3e76"],
    ["0x189d7576", "0xa0f2bbc5", "0x970c7f29", "0xa32d3e76"],
    ["0x981df5f6", "0xa0f2bbc5", "0x970c7f29", "0xa32d3e76"],
    ["0x189d7576", "0x20723b45", "0x178cffa9", "0xa32d3e76"],
    ["0x981df5f6", "0x20723b45", "0x178cffa9", "0xa32d3e76"],
    ["0x18957576", "0xa0723b45", "0x178cffa9", "0xa32d3e76"],
    ["0x9815f5f6", "0xa0723b45", "0x178cffa9", "0xa32d3e76"],
    ["0x18957576", "0x20f2bbc5", "0x178cffa9", "0xa32d3e76"],
    ["0x9815f5f6", "0x20f2bbc5", "0x178cffa9", "0xa32d3e76"],
    ["0x189d7576", "0xa0f2bbc5", "0x178cffa9", "0xa32d3e76"],
    ["0x981df5f6", "0xa0f2bbc5", "0x178cffa9", "0xa32d3e76"],
    ["0x989d7576", "0x207a3b45", "0x978cffa9", "0xa32d3e76"],
    ["0x181df5f6", "0x207a3b45", "0x978cffa9", "0xa32d3e76"],
    ["0x98957576", "0xa07a3b45", "0x978cffa9", "0xa32d3e76"],
    ["0x1815f5f6", "0xa07a3b45", "0x978cffa9", "0xa32d3e76"],
    ["0x98957576", "0x20fabbc5", "0x978cffa9", "0xa32d3e76"],
    ["0x1815f5f6", "0x20fabbc5", "0x978cffa9", "0xa32d3e76"],
    ["0x989d7576", "0xa0fabbc5", "0x978cffa9", "0xa32d3e76"],
    ["0x181df5f6", "0xa0fabbc5", "0x978cffa9", "0xa32d3e76"],
    ["0x989d7576", "0x207a3b45", "0x170c7f29", "0x23adbef6"],
    ["0x181df5f6", "0x207a3b45", "0x170c7f29", "0x23adbef6"],
    ["0x98957576", "0xa07a3b45", "0x170c7f29", "0x23adbef6"],
    ["0x1815f5f6", "0xa07a3b45", "0x170c7f29", "0x23adbef6"],
    ["0x98957576", "0x20fabbc5", "0x170c7f29", "0x23adbef6"],
    ["0x1815f5f6", "0x20fabbc5", "0x170c7f29", "0x23adbef6"],
    ["0x989d7576", "0xa0fabbc5", "0x170c7f29", "0x23adbef6"],
    ["0x181df5f6", "0xa0fabbc5", "0x170c7f29", "0x23adbef6"],
    ["0x189d7576", "0x20723b45", "0x970c7f29", "0x23adbef6"],
    ["0x981df5f6", "0x20723b45", "0x970c7f29", "0x23adbef6"],
    ["0x18957576", "0xa0723b45", "0x970c7f29", "0x23adbef6"],
    ["0x9815f5f6", "0xa0723b45", "0x970c7f29", "0x23adbef6"],
    ["0x18957576", "0x20f2bbc5", "0x970c7f29", "0x23adbef6"],
    ["0x9815f5f6", "0x20f2bbc5", "0x970c7f29", "0x23adbef6"],
    ["0x189d7576", "0xa0f2bbc5", "0x970c7f29", "0x23adbef6"],
    ["0x981df5f6", "0xa0f2bbc5", "0x970c7f29", "0x23adbef6"],
    ["0x189d7576", "0x20723b45", "0x178cffa9", "0x23adbef6"],
    ["0x981df5f6", "0x20723b45", "0x178cffa9", "0x23adbef6"],
    ["0x18957576", "0xa0723b45", "0x178cffa9", "0x23adbef6"],
    ["0x9815f5f6", "0xa0723b45", "0x178cffa9", "0x23adbef6"],
    ["0x18957576", "0x20f2bbc5", "0x178cffa9", "0x23adbef6"],
    ["0x9815f5f6", "0x20f2bbc5", "0x178cffa9", "0x23adbef6"],
    ["0x189d7576", "0xa0f2bbc5", "0x178cffa9", "0x23adbef6"],
    ["0x981df5f6", "0xa0f2bbc5", "0x178cffa9", "0x23adbef6"],
    ["0x989d7576", "0x207a3b45", "0x978cffa9", "0x23adbef6"],
    ["0x181df5f6", "0x207a3b45", "0x978cffa9", "0x23adbef6"],
    ["0x98957576", "0xa07a3b45", "0x978cffa9", "0x23adbef6"],
    ["0x1815f5f6", "0xa07a3b45", "0x978cffa9", "0x23adbef6"],
    ["0x98957576", "0x20fabbc5", "0x978cffa9", "0x23adbef6"],
    ["0x1815f5f6", "0x20fabbc5", "0x978cffa9", "0x23adbef6"],
    ["0x989d7576", "0xa0fabbc5", "0x978cffa9", "0x23adbef6"],
    ["0x181df5f6", "0xa0fabbc5", "0x978cffa9", "0x23adbef6"],
    ["0x98957576", "0x207a3b45", "0x17047f29", "0xa3adbef6"],
    ["0x1815f5f6", "0x207a3b45", "0x17047f29", "0xa3adbef6"],
    ["0x989d7576", "0xa07a3b45", "0x17047f29", "0xa3adbef6"],
    ["0x181df5f6", "0xa07a3b45", "0x17047f29", "0xa3adbef6"],
    ["0x989d7576", "0x20fabbc5", "0x17047f29", "0xa3adbef6"],
    ["0x181df5f6", "0x20fabbc5", "0x17047f29", "0xa3adbef6"],
    ["0x98957576", "0xa0fabbc5", "0x17047f29", "0xa3adbef6"],
    ["0x1815f5f6", "0xa0fabbc5", "0x17047f29", "0xa3adbef6"],
    ["0x18957576", "0x20723b45", "0x97047f29", "0xa3adbef6"],
    ["0x9815f5f6", "0x20723b45", "0x97047f29", "0xa3adbef6"],
    ["0x189d7576", "0xa0723b45", "0x97047f29", "0xa3adbef6"],
    ["0x981df5f6", "0xa0723b45", "0x97047f29", "0xa3adbef6"],
    ["0x189d7576", "0x20f2bbc5", "0x97047f29", "0xa3adbef6"],
    ["0x981df5f6", "0x20f2bbc5", "0x97047f29", "0xa3adbef6"],
    ["0x18957576", "0xa0f2bbc5", "0x97047f29", "0xa3adbef6"],
    ["0x9815f5f6", "0xa0f2bbc5", "0x97047f29", "0xa3adbef6"],
    ["0x18957576", "0x20723b45", "0x1784ffa9", "0xa3adbef6"],
    ["0x9815f5f6", "0x20723b45", "0x1784ffa9", "0xa3adbef6"],
    ["0x189d7576", "0xa0723b45", "0x1784ffa9", "0xa3adbef6"],
    ["0x981df5f6", "0xa0723b45", "0x1784ffa9", "0xa3adbef6"],
    ["0x189d7576", "0x20f2bbc5", "0x1784ffa9", "0xa3adbef6"],
    ["0x981df5f6", "0x20f2bbc5", "0x1784ffa9", "0xa3adbef6"],
    ["0x18957576", "0xa0f2bbc5", "0x1784ffa9", "0xa3adbef6"],
    ["0x9815f5f6", "0xa0f2bbc5", "0x1784ffa9", "0xa3adbef6"],
    ["0x98957576", "0x207a3b45", "0x9784ffa9", "0xa3adbef6"],
    ["0x1815f5f6", "0x207a3b45", "0x9784ffa9", "0xa3adbef6"],
    ["0x989d7576", "0xa07a3b45", "0x9784ffa9", "0xa3adbef6"],
    ["0x181df5f6", "0xa07a3b45", "0x9784ffa9", "0xa3adbef6"],
    ["0x989d7576", "0x20fabbc5", "0x9784ffa9", "0xa3adbef6"],
    ["0x181df5f6", "0x20fabbc5", "0x9784ffa9", "0xa3adbef6"],
    ["0x98957576", "0xa0fabbc5", "0x9784ffa9", "0xa3adbef6"],
    ["0x1815f5f6", "0xa0fabbc5", "0x9784ffa9", "0xa3adbef6"],
]

org_keys = [int(x, 16) for x in org_keys]


final_key = []
for key in keys:
    key = [int(x, 16) for x in key]
    i = 0
    while i < 100:
        msg = urandom(8)
        ct = encrypt(msg, org_keys)
        _msg = decrypt(ct, key)
        if _msg != msg:
            if key == org_keys:
                print(_msg, msg)
            break
        i += 1
        if i == 100:
            final_key.append(hex_array(key))
            break

print(org_keys in keys)
from pprint import pprint

pprint(final_key)
