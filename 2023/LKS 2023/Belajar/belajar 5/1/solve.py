import math, string

ASCII_LOWERCASE = list(string.ascii_lowercase)

def get_len(cipher):
    res = (math.sqrt(1 + 8 * len(cipher)) - 1) / 4
    if res.is_integer():
        return int(res)
    else:
        return False

def decrypt(cipher):
    len = get_len(cipher)
    if not len:
        return 0
    center = cipher[len**2:(len**2)+len]

    for brute in range(26):
        print(f'{brute+1} = ', end="")
        for c in center:
            print(ASCII_LOWERCASE[(ASCII_LOWERCASE.index(c) + brute) % 26], end='')
        print()

# cipher = "oubfbofgffkewddplnjafowyuuwfoxzovqxdkokxopootnfmmyuwsjoxfhddfoxgixezagnrnarsrrwqippbxzvmraikggirajlahcyelplypqppuognnzvxtkpygieegpyhjyfantaeanefeejdvccokmizenvxttvenwynupjpwawjabaafzryykgievajrtpprajsujqlmszdzmdeddicubbnjlhydmuwssudmvxmtoyelplypqppuognnzvxtkpygieegpyhjyfalrycylcdcchbtaamikgxcltvrrtcluwlsnoubfbofgffkewddplnjafowyuuwfoxzovqgmtxtgxyxxcwovvhdfbsxgoqmmoxgprgniekrvrevwvvaumttfbdzqvemokkmvenpelgagnrnarsrrwqippbxzvmraikggirajlahcekrvrevwvvaumttfbdzqvemokkmvenpelgntaeanefeejdvccokmizenvxttvenwynuplrycylcdcchbtaamikgxcltvrrtcluwlsnwcjnjwnonnsmellxtvrinwegccenwfhwdybgzkizqhffjhzqluywaoohpvqqrqzmqmfzotmxvmdusswumdyhljnbbuciddedmzdzsmqvozxofwuuywofajnlpddwekffgfobfbuolqjusjarpptrjaveigkyyrzfaabajwawpjmrkvtkbsqquskbwfjhlzzsagbbcbkxbxqkuzsdbsjayycasjenrpthhaiojjkjsfjfysmrkvtkbsqquskbwfjhlzzsagbbcbkxbxqkjohsqhypnnrphytcgeiwwpxdyyzyhuyunhotmxvmdusswumdyhljnbbuciddedmzdzsmzexigxofddhfxojswuymmfntoopoxkokdxfkdomduljjnldupycaessltzuuvudquqjdqvozxofwuuywofajnlpddwekffgfobfbuonslwulctrrvtlcxgkimaatbhccdclycyrldibmkbsjhhljbsnwaycqqjrxsstsbosohbdibmkbsjhhljbsnwaycqqjrxsstsbosohbxcvgevmdbbfdvmhquswkkdlrmmnmvimibvdibmkbsjhhljbsnwaycqqjrxsstsbosohbingrpgxommqogxsbfdhvvowcxxyxgtxtmglrycylcdcchbtaamikgxcltvrrtcluwlsnxdkokxopootnfmmyuwsjoxfhddfoxgixezjpwawjabaafzryykgievajrtpprajsujqllrycylcdcchbtaamikgxcltvrrtcluwlsnvbimivmnmmrldkkwsuqhmvdfbbdmvegvcxoubfbofgffkewddplnjafowyuuwfoxzovqlrycylcdcchbtaamikgxcltvrrtcluwlsnlrycylcdcchbtaamikgxcltvrrtcluwlsnwcjnjwnonnsmellxtvrinwegccenwfhwdypvcgcpghgglfxeeqmokbgpxzvvxgpyapwriovzvizazzeyqxxjfhduziqsooqzirtipkwcjnjwnonnsmellxtvrinwegccenwfhwdyiovzvizazzeyqxxjfhduziqsooqzirtipkflswsfwxwwbvnuugcearwfnpllnwfoqfmhagnrnarsrrwqippbxzvmraikggirajlahcmszdzmdeddicubbnjlhydmuwssudmvxmtobhosobstssxrjqqcyawnsbjlhhjsbkmbidingrpgxommqogxsbfdhvvowcxxyxgtxtmgnslwulctrrvtlcxgkimaatbhccdclycyrldibmkbsjhhljbsnwaycqqjrxsstsbosohbafyjhypgeeigypktxvznngouppqpylpleyqvozxofwuuywofajnlpddwekffgfobfbuoafyjhypgeeigypktxvznngouppqpylpleykpitrizqoosqizudhfjxxqyezzazivzvoiingrpgxommqogxsbfdhvvowcxxyxgtxtmgrwpaypgxvvzxpgbkomqeexflgghgpcgcvpafyjhypgeeigypktxvznngouppqpylpleyqvozxofwuuywofajnlpddwekffgfobfbuotyrcarizxxbzridmqosggzhniijireiexrbgzkizqhffjhzqluywaoohpvqqrqzmqmfzuzsdbsjayycasjenrpthhaiojjkjsfjfysuzsdbsjayycasjenrpthhaiojjkjsfjfystyrcarizxxbzridmqosggzhniijireiexrejcnlctkiimkctoxbzdrrksyttutcptpic"
cipher = 'vzhlvzhlzhlvhlzvhlzvhzhlvhlzvhlzhvzlhvzhlvhzlvzvhzvlhzvhlzvhlzvhzlkowakowaowakwaokwaokwowakwaokwaowkoawkowakwoakokwokawokwaokwaokwoarvdhrvdhvdhrdhvrdhvrdvdhrdhvrdhvdrvhdrvdhrdvhrvrdvrhdvrdhvrdhvrdvhwaimwaimaimwimawimawiaimwimawimaiwamiwaimwiamwawiawmiawimawimawiamyckoyckockoykocykocykckoykocykockycokyckoykcoycykcyokcykocykocykcofjrvfjrvjrvfrvjfrvjfrjrvfrvjfrvjrfjvrfjrvfrjvfjfrjfvrjfrvjfrvjfrjvzdlpzdlpdlpzlpdzlpdzldlpzlpdzlpdlzdplzdlpzldpzdzldzpldzlpdzlpdzldplpxblpxbpxblxbplxbplxpxblxbplxbpxlpbxlpxblxpblplxplbxplxbplxbplxpbtxfjtxfjxfjtfjxtfjxtfxfjtfjxtfjxftxjftxfjtfxjtxtfxtjfxtfjxtfjxtfxjbfnrbfnrfnrbnrfbnrfbnfnrbnrfbnrfnbfrnbfnrbnfrbfbnfbrnfbnrfbnrfbnfrcgoscgosgoscosgcosgcogoscosgcosgocgsocgoscogscgcogcsogcosgcosgcogskowakowaowakwaokwaokwowakwaokwaowkoawkowakwoakokwokawokwaokwaokwoalpxblpxbpxblxbplxbplxpxblxbplxbpxlpbxlpxblxpblplxplbxplxbplxbplxpbimuyimuymuyiuymiuymiumuyiuymiuymuimyuimuyiumyimiumiyumiuymiuymiumyyckoyckockoykocykocykckoykocykockycokyckoykcoycykcyokcykocykocykcovzhlvzhlzhlvhlzvhlzvhzhlvhlzvhlzhvzlhvzhlvhzlvzvhzvlhzvhlzvhlzvhzluygkuygkygkugkyugkyugygkugkyugkyguykguygkugykuyugyukgyugkyugkyugykzdlpzdlpdlpzlpdzlpdzldlpzlpdzlpdlzdplzdlpzldpzdzldzpldzlpdzlpdzldpkowakowaowakwaokwaokwowakwaokwaowkoawkowakwoakokwokawokwaokwaokwoasweisweiweiseiwseiwseweiseiwseiweswiesweisewiswsewsiewseiwseiwsewiimuyimuymuyiuymiuymiumuyiuymiuymuimyuimuyiumyimiumiyumiuymiuymiumyvzhlvzhlzhlvhlzvhlzvhzhlvhlzvhlzhvzlhvzhlvhzlvzvhzvlhzvhlzvhlzvhzlaemqaemqemqamqeamqeamemqamqeamqemaeqmaemqameqaeameaqmeamqeamqeameqptbfptbftbfpbftpbftpbtbfpbftpbftbptfbptbfpbtfptpbtpfbtpbftpbftpbtfkowakowaowakwaokwaokwowakwaokwaowkoawkowakwoakokwokawokwaokwaokwoamqycmqycqycmycqmycqmyqycmycqmycqymqcymqycmyqcmqmyqmcyqmycqmycqmyqcosaeosaesaeoaesoaesoasaeoaesoaesaoseaosaeoaseosoasoeasoaesoaesoaseuygkuygkygkugkyugkyugygkugkyugkyguykguygkugykuyugyukgyugkyugkyugyknrzdnrzdrzdnzdrnzdrnzrzdnzdrnzdrznrdznrzdnzrdnrnzrndzrnzdrnzdrnzrdxbjnxbjnbjnxjnbxjnbxjbjnxjnbxjnbjxbnjxbjnxjbnxbxjbxnjbxjnbxjnbxjbnvzhlvzhlzhlvhlzvhlzvhzhlvhlzvhlzhvzlhvzhlvhzlvzvhzvlhzvhlzvhlzvhzlrvdhrvdhvdhrdhvrdhvrdvdhrdhvrdhvdrvhdrvdhrdvhrvrdvrhdvrdhvrdhvrdvhwaimwaimaimwimawimawiaimwimawimaiwamiwaimwiamwawiawmiawimawimawiamwksgkwsgkwsgkswgksgkgwksgwskgswkgskwsgkwsgwsksgkwsgkwsgwskwskgwskgxlthlxthlxthltxhlthlhxlthxtlhtxlhtlxthlxthxtlthlxthlxthxtlxtlhxtlhnbjxbnjxbnjxbjnxbjxbxnbjxnjbxjnbxjbnjxbnjxnjbjxbnjxbnjxnjbnjbxnjbxdrznrdznrdznrzdnrznrndrzndzrnzdrnzrdznrdzndzrznrdznrdzndzrdzrndzrnrfnbfrnbfrnbfnrbfnbfbrfnbrnfbnrfbnfrnbfrnbrnfnbfrnbfrnbrnfrnfbrnfbrfnbfrnbfrnbfnrbfnbfbrfnbrnfbnrfbnfrnbfrnbrnfnbfrnbfrnbrnfrnfbrnfbesaoseaoseaosaeosaosoesaoeasoaesoaseaoseaoeasaoseaoseaoeaseasoeasoxlthlxthlxthltxhlthlhxlthxtlhtxlhtlxthlxthxtlthlxthlxthxtlxtlhxtlhjxftxjftxjftxfjtxftxtjxftjfxtfjxtfxjftxjftjfxftxjftxjftjfxjfxtjfxtdrznrdznrdznrzdnrznrndrzndzrnzdrnzrdznrdzndzrznrdznrdzndzrdzrndzrnlzhvzlhvzlhvzhlvzhvzvlzhvlhzvhlzvhzlhvzlhvlhzhvzlhvzlhvlhzlhzvlhzvthpdhtpdhtpdhptdhpdhdthpdtphdpthdphtpdhtpdtphpdhtpdhtpdtphtphdtphdqemaeqmaeqmaemqaemaeaqemaqmeamqeameqmaeqmaqmemaeqmaeqmaqmeqmeaqmeaqemaeqmaeqmaemqaemaeaqemaqmeamqeameqmaeqmaqmemaeqmaeqmaqmeqmeaqmeathpdhtpdhtpdhptdhpdhdthpdtphdpthdphtpdhtpdtphpdhtpdhtpdtphtphdtphdftbptfbptfbptbfptbptpftbpfbtpbftpbtfbptfbpfbtbptfbptfbpfbtfbtpfbtpwksgkwsgkwsgkswgksgkgwksgwskgswkgskwsgkwsgwsksgkwsgkwsgwskwskgwskgmaiwamiwamiwaimwaiwawmaiwmiawimawiamiwamiwmiaiwamiwamiwmiamiawmiawsgocgsocgsocgoscgocgcsgocsogcosgcogsocgsocsogocgsocgsocsogsogcsogcftbptfbptfbptbfptbptpftbpfbtpbftpbtfbptfbpfbtbptfbptfbpfbtfbtpfbtpcqymqcymqcymqycmqymqmcqymcyqmycqmyqcymqcymcyqymqcymqcymcyqcyqmcyqmxlthlxthlxthltxhlthlhxlthxtlhtxlhtlxthlxthxtlthlxthlxthxtlxtlhxtlhesaoseaoseaosaeosaosoesaoeasoaesoaseaoseaoeasaoseaoseaoeaseasoeasobpxlpbxlpbxlpxblpxlplbpxlbxplxbplxpbxlpbxlbxpxlpbxlpbxlbxpbxplbxpldrznrdznrdznrzdnrznrndrzndzrnzdrnzrdznrdzndzrznrdznrdzndzrdzrndzrniweswieswiesweisweswsiwesiewseiwsewieswiesieweswieswiesiewiewsiewsjxftxjftxjftxfjtxftxtjxftjfxtfjxtfxjftxjftjfxftxjftxjftjfxjfxtjfxtpdlzdplzdplzdlpzdlzdzpdlzpldzlpdzldplzdplzpldlzdplzdplzpldpldzpldzmaiwamiwamiwaimwaiwawmaiwmiawimawiamiwamiwmiaiwamiwamiwmiamiawmiawvjrfjvrfjvrfjrvfjrfjfvjrfvrjfrvjfrjvrfjvrfvrjrfjvrfjvrfvrjvrjfvrjfkyguykguykguygkuyguyukygukgyugkyugykguykgukgyguykguykgukgykgyukgyubpxlpbxlpbxlpxblpxlplbpxlbxplxbplxpbxlpbxlbxpxlpbxlpbxlbxpbxplbxplbpxlpbxlpbxlpxblpxlplbpxlbxplxbplxpbxlpbxlbxpxlpbxlpbxlbxpbxplbxpliweswieswiesweisweswsiwesiewseiwsewieswiesieweswieswiesiewiewsiewsptbfptbftbfpbftpbftpbtbfpbftpbftbptfbptbfpbtfptpbtpfbtpbftpbftpbtflpxblpxbpxblxbplxbplxpxblxbplxbpxlpbxlpxblxpblplxplbxplxbplxbplxpbgkswgkswkswgswkgswkgskswgswkgswksgkwsgkswgskwgkgskgwskgswkgswkgskwlpxblpxbpxblxbplxbplxpxblxbplxbpxlpbxlpxblxpblplxplbxplxbplxbplxpbsweisweiweiseiwseiwseweiseiwseiweswiesweisewiswsewsiewseiwseiwsewivzhlvzhlzhlvhlzvhlzvhzhlvhlzvhlzhvzlhvzhlvhzlvzvhzvlhzvhlzvhlzvhzldhptdhpthptdpthdpthdphptdpthdpthpdhtpdhptdphtdhdphdtphdpthdpthdphteiqueiquiquequiequieqiquequiequiqeiuqeiqueqiueieqieuqiequiequieqiuptbfptbftbfpbftpbftpbtbfpbftpbftbptfbptbfpbtfptpbtpfbtpbftpbftpbtfnrzdnrzdrzdnzdrnzdrnzrzdnzdrnzdrznrdznrzdnzrdnrnzrndzrnzdrnzdrnzrdaemqaemqemqamqeamqeamemqamqeamqemaeqmaemqameqaeameaqmeamqeamqeameqxbjnxbjnbjnxjnbxjnbxjbjnxjnbxjnbjxbnjxbjnxjbnxbxjbxnjbxjnbxjnbxjbnyckoyckockoykocykocykckoykocykockycokyckoykcoycykcyokcykocykocykcozdlpzdlpdlpzlpdzlpdzldlpzlpdzlpdlzdplzdlpzldpzdzldzpldzlpdzlpdzldpyckoyckockoykocykocykckoykocykockycokyckoykcoycykcyokcykocykocykcomqycmqycqycmycqmycqmyqycmycqmycqymqcymqycmyqcmqmyqmcyqmycqmycqmyqckowakowaowakwaokwaokwowakwaokwaowkoawkowakwoakokwokawokwaokwaokwoadhptdhpthptdpthdpthdphptdpthdpthpdhtpdhptdphtdhdphdtphdpthdpthdphtvzhlvzhlzhlvhlzvhlzvhzhlvhlzvhlzhvzlhvzhlvhzlvzvhzvlhzvhlzvhlzvhzlqucgqucgucgqcguqcguqcucgqcguqcgucqugcqucgqcugquqcuqgcuqcguqcguqcugkowakowaowakwaokwaokwowakwaokwaowkoawkowakwoakokwokawokwaokwaokwoaptbfptbftbfpbftpbftpbtbfpbftpbftbptfbptbfpbtfptpbtpfbtpbftpbftpbtfdhptdhpthptdpthdpthdphptdpthdpthpdhtpdhptdphtdhdphdtphdpthdpthdphtzdlpzdlpdlpzlpdzlpdzldlpzlpdzlpdlzdplzdlpzldpzdzldzpldzlpdzlpdzldpnrzdnrzdrzdnzdrnzdrnzrzdnzdrnzdrznrdznrzdnzrdnrnzrndzrnzdrnzdrnzrdnrzdnrzdrzdnzdrnzdrnzrzdnzdrnzdrznrdznrzdnzrdnrnzrndzrnzdrnzdrnzrdsweisweiweiseiwseiwseweiseiwseiweswiesweisewiswsewsiewseiwseiwsewinrzdnrzdrzdnzdrnzdrnzrzdnzdrnzdrznrdznrzdnzrdnrnzrndzrnzdrnzdrnzrdptbfptbftbfpbftpbftpbtbfpbftpbftbptfbptbfpbtfptpbtpfbtpbftpbftpbtfxbjnxbjnbjnxjnbxjnbxjbjnxjnbxjnbjxbnjxbjnxjbnxbxjbxnjbxjnbxjnbxjbnptbfptbftbfpbftpbftpbtbfpbftpbftbptfbptbfpbtfptpbtpfbtpbftpbftpbtfjnvzjnvznvzjvznjvznjvnvzjvznjvznvjnzvjnvzjvnzjnjvnjzvnjvznjvznjvnzosaeosaesaeoaesoaesoasaeoaesoaesaoseaosaeoaseosoasoeasoaesoaesoasekyguykguykguygkuyguyukygukgyugkyugykguykgukgyguykguykgukgykgyukgyupdlzdplzdplzdlpzdlzdzpdlzpldzlpdzldplzdplzpldlzdplzdplzpldpldzpldzthpdhtpdhtpdhptdhpdhdthpdtphdpthdphtpdhtpdtphpdhtpdhtpdtphtphdtphdlzhvzlhvzlhvzhlvzhvzvlzhvlhzvhlzvhzlhvzlhvlhzhvzlhvzlhvlhzlhzvlhzvbpxlpbxlpbxlpxblpxlplbpxlbxplxbplxpbxlpbxlbxpxlpbxlpbxlbxpbxplbxplymuimyuimyuimuyimuimiymuiyumiuymiumyuimyuiyumuimyuimyuiyumyumiyumiuiqeiuqeiuqeiqueiqeieuiqeuqiequieqiuqeiuqeuqiqeiuqeiuqeuqiuqieuqieiweswieswiesweisweswsiwesiewseiwsewieswiesieweswieswiesiewiewsiewsockycokycokyckoyckycyockyokcykocykcokycokyokckycokycokyokcokcyokcylzhvzlhvzlhvzhlvzhvzvlzhvlhzvhlzvhzlhvzlhvlhzhvzlhvzlhvlhzlhzvlhzvaowkoawkoawkowakowkokaowkawokwaokwoawkoawkawowkoawkoawkawoawokawokthpdhtpdhtpdhptdhpdhdthpdtphdpthdphtpdhtpdtphpdhtpdhtpdtphtphdtphdaowkoawkoawkowakowkokaowkawokwaokwoawkoawkawowkoawkoawkawoawokawoksgocgsocgsocgoscgocgcsgocsogcosgcogsocgsocsogocgsocgsocsogsogcsogcqemaeqmaeqmaemqaemaeaqemaqmeamqeameqmaeqmaqmemaeqmaeqmaqmeqmeaqmeapdlzdplzdplzdlpzdlzdzpdlzpldzlpdzldplzdplzpldlzdplzdplzpldpldzpldzgucqugcqugcqucgqucquqgucqgcuqcguqcugcqugcqgcucqugcqugcqgcugcuqgcuqdrznrdznrdznrzdnrznrndrzndzrnzdrnzrdznrdzndzrznrdznrdzndzrdzrndzrnqemaeqmaeqmaemqaemaeaqemaqmeamqeameqmaeqmaqmemaeqmaeqmaqmeqmeaqmeagucqugcqugcqucgqucquqgucqgcuqcguqcugcqugcqgcucqugcqugcqgcugcuqgcuqbpxlpbxlpbxlpxblpxlplbpxlbxplxbplxpbxlpbxlbxpxlpbxlpbxlbxpbxplbxplgucqugcqugcqucgqucquqgucqgcuqcguqcugcqugcqgcucqugcqugcqgcugcuqgcuqqemaeqmaeqmaemqaemaeaqemaqmeamqeameqmaeqmaqmemaeqmaeqmaqmeqmeaqmeadrznrdznrdznrzdnrznrndrzndzrnzdrnzrdznrdzndzrznrdznrdzndzrdzrndzrnvjrfjvrfjvrfjrvfjrfjfvjrfvrjfrvjfrjvrfjvrfvrjrfjvrfjvrfvrjvrjfvrjfpdlzdplzdplzdlpzdlzdzpdlzpldzlpdzldplzdplzpldlzdplzdplzpldpldzpldzxlthlxthlxthltxhlthlhxlthxtlhtxlhtlxthlxthxtlthlxthlxthxtlxtlhxtlhznvjnzvjnzvjnvzjnvjnjznvjzvnjvznjvnzvjnzvjzvnvjnzvjnzvjzvnzvnjzvnjgucqugcqugcqucgqucquqgucqgcuqcguqcugcqugcqgcucqugcqugcqgcugcuqgcuquiqeiuqeiuqeiqueiqeieuiqeuqiequieqiuqeiuqeuqiqeiuqeiuqeuqiuqieuqielzhvzlhvzlhvzhlvzhvzvlzhvlhzvhlzvhzlhvzlhvlhzhvzlhvzlhvlhzlhzvlhzvkyguykguykguygkuyguyukygukgyugkyugykguykgukgyguykguykgukgykgyukgyuthpdhtpdhtpdhptdhpdhdthpdtphdpthdphtpdhtpdtphpdhtpdhtpdtphtphdtphd'
print(decrypt(cipher))
