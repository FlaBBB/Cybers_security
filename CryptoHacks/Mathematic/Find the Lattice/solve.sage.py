

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_3156345035036717350525193928916612635735247103483790556202751265364323015046107826872465140214743303481003344978311495629889515049380832892208186828535345 = Integer(3156345035036717350525193928916612635735247103483790556202751265364323015046107826872465140214743303481003344978311495629889515049380832892208186828535345); _sage_const_8602572278637572447996779269054422916052092142057791762894076255489277619973614451703105529765410634241038400626711690700834246324093399931604125193254129 = Integer(8602572278637572447996779269054422916052092142057791762894076255489277619973614451703105529765410634241038400626711690700834246324093399931604125193254129); _sage_const_1373936559765715684273343070712873856117345665380694816705741442767387094374547222940903146302119910715970792101120263913331497637846854616296197177273635 = Integer(1373936559765715684273343070712873856117345665380694816705741442767387094374547222940903146302119910715970792101120263913331497637846854616296197177273635)
import math
from Crypto.Util.number import getPrime, inverse, bytes_to_long, long_to_bytes

def gaussian_lattice_reduction(V1, V2):
    while True:
        if V2.norm() < V1.norm():
            V1, V2 = V2, V1
        m = round((V1 * V2) / (V1 * V1))
        if m == _sage_const_0 :
            return V1, V2
        V2 = V2 - m * V1

def decrypt(q, h, f, g, e):
    a = (f*e) % q
    m = (a*inverse(f, g)) % g
    return m

def crack(q, h):
    return gaussian_lattice_reduction(vector([_sage_const_1 , h]), vector([_sage_const_0 , q]))[_sage_const_0 ]

e = _sage_const_3156345035036717350525193928916612635735247103483790556202751265364323015046107826872465140214743303481003344978311495629889515049380832892208186828535345 
q, h = (_sage_const_8602572278637572447996779269054422916052092142057791762894076255489277619973614451703105529765410634241038400626711690700834246324093399931604125193254129 , _sage_const_1373936559765715684273343070712873856117345665380694816705741442767387094374547222940903146302119910715970792101120263913331497637846854616296197177273635 )

f, g = crack(q, h)

M = decrypt(q, h, f, g, e)
print(long_to_bytes(M))

